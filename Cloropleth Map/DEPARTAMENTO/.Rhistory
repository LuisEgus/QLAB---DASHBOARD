#P59R con esto sale: "some estimated ov variances are negative"
Ciudadania =~ P64AR + P64BR + P64CR + P64DR + P64ER + P64FR + P64GR + P64HR + P64IR                 #1 missing en cada variable, es el mismo individuo
Seguridad =~ P63A + P63B + P63C + P63F
Salud =~ P72A + P72B + P72C + P72D
##"causal" relationships (ojo: las exógenas deben ser continuas, podría hacer un índice de otras variables)
#Por temas de que el modelo esté identificado, no es necesario que todos tengan las mismas exógenas
#variables comunes para todos
Sociabilidad1 + Sociabilidad2 + Agencia + Ciudadania + Seguridad ~ P42 + s3_p5_porc_m + P44C + P44F + P35 +        # del lado de la oferta
P98 + P26 + AMBITOR                              # del lado de la demanda
#P42 condiciona a que la vivienda tenga energia electrica (no sé si ponerla) / 63 missings
#P40 no corre el modelo si la agrego
#variables individuales para cada capacidad
#Seguridad ~
Salud ~ P42 + s3_p5_porc_m + P44C + P44F + P35 + P46R + Sociabilidad1 + Sociabilidad2 + Agencia + Ciudadanía + Seguridad +
P98 + P26 + AMBITOR
'
fit <- sem(model, data=base_final ,   ordered=c(
"P50AR", "P50BR", "P50CR", "P50DR", "P50ER", "P50FR",
"P51AR", "P51BR", "P51CR", "P51DR", "P51ER", "P51FR", "P51GR",
"P56R", "P57R", "P58R", "P59R",
"P64AR", "P64BR", "P64CR", "P64DR", "P64ER", "P64FR", "P64GR", "P64HR", "P64IR",
"P63A", "P63B", "P63C", "P63F",
"P72A", "P72B", "P72C", "P72D"
)
)
model <- '
##modelo de medida  (measurement equations)
#Descanso_juego =~ dormir + ocio
#genera varianzas negativas
Sociabilidad1 =~ P50AR + P50BR + P50CR + P50DR + P50ER + P50FR                                      #P50FR 1 missing
Sociabilidad2 =~ P51AR + P51BR + P51CR + P51DR + P51ER + P51FR + P51GR
Agencia  =~ P56R + P57R + P58R
#P59R con esto sale: "some estimated ov variances are negative"
Ciudadania =~ P64AR + P64BR + P64CR + P64DR + P64ER + P64FR + P64GR + P64HR + P64IR                 #1 missing en cada variable, es el mismo individuo
Seguridad =~ P63A + P63B + P63C + P63F
Salud =~ P72A + P72B + P72C + P72D
##"causal" relationships (ojo: las exógenas deben ser continuas, podría hacer un índice de otras variables)
#Por temas de que el modelo esté identificado, no es necesario que todos tengan las mismas exógenas
#variables comunes para todos
Sociabilidad1 + Sociabilidad2 + Agencia + Ciudadania + Seguridad ~ P42 + s3_p5_porc_m + P44C + P44F + P35 +        # del lado de la oferta
P98 + P26 + AMBITOR                              # del lado de la demanda
#P42 condiciona a que la vivienda tenga energia electrica (no sé si ponerla) / 63 missings
#P40 no corre el modelo si la agrego
#variables individuales para cada capacidad
#Seguridad ~
Salud ~ P42 + s3_p5_porc_m + P44C + P44F + P35 + P46R +
P98 + P26 + AMBITOR
'
fit <- sem(model, data=base_final ,   ordered=c(
"P50AR", "P50BR", "P50CR", "P50DR", "P50ER", "P50FR",
"P51AR", "P51BR", "P51CR", "P51DR", "P51ER", "P51FR", "P51GR",
"P56R", "P57R", "P58R", "P59R",
"P64AR", "P64BR", "P64CR", "P64DR", "P64ER", "P64FR", "P64GR", "P64HR", "P64IR",
"P63A", "P63B", "P63C", "P63F",
"P72A", "P72B", "P72C", "P72D"
)
model <- '
##modelo de medida  (measurement equations)
#Descanso_juego =~ dormir + ocio
#genera varianzas negativas
Sociabilidad1 =~ P50AR + P50BR + P50CR + P50DR + P50ER + P50FR                                      #P50FR 1 missing
Sociabilidad2 =~ P51AR + P51BR + P51CR + P51DR + P51ER + P51FR + P51GR
Agencia  =~ P56R + P57R + P58R
#P59R con esto sale: "some estimated ov variances are negative"
Ciudadania =~ P64AR + P64BR + P64CR + P64DR + P64ER + P64FR + P64GR + P64HR + P64IR                 #1 missing en cada variable, es el mismo individuo
Seguridad =~ P63A + P63B + P63C + P63F
Salud =~ P72A + P72B + P72C + P72D
##"causal" relationships (ojo: las exógenas deben ser continuas, podría hacer un índice de otras variables)
#Por temas de que el modelo esté identificado, no es necesario que todos tengan las mismas exógenas
#variables comunes para todos
Sociabilidad1 + Sociabilidad2 + Agencia + Ciudadania + Seguridad ~ P42 + s3_p5_porc_m + P44C + P44F + P35 +        # del lado de la oferta
P98 + P26 + AMBITOR                              # del lado de la demanda
#P42 condiciona a que la vivienda tenga energia electrica (no sé si ponerla) / 63 missings
#P40 no corre el modelo si la agrego
#variables individuales para cada capacidad
#Seguridad ~
Salud ~ P42 + s3_p5_porc_m + P44C + P44F + P35 + P46R +
P98 + P26 + AMBITOR
'
fit <- sem(model, data=base_final ,   ordered=c(
"P50AR", "P50BR", "P50CR", "P50DR", "P50ER", "P50FR",
"P51AR", "P51BR", "P51CR", "P51DR", "P51ER", "P51FR", "P51GR",
"P56R", "P57R", "P58R", "P59R",
"P64AR", "P64BR", "P64CR", "P64DR", "P64ER", "P64FR", "P64GR", "P64HR", "P64IR",
"P63A", "P63B", "P63C", "P63F",
"P72A", "P72B", "P72C", "P72D"
)
)
library(haven)
library(dplyr)
library(lavaan)
library("tibble")
library(tidySEM)
library(ggplot2)
library('lattice')
library("hrbrthemes")
base_final <- read_dta("C:/Cursos_PUCP/2021-1/Tesis 2/Base de datos/BASE_FINAL/Bases de Datos/base_final_recode.dta")
model <- '
##modelo de medida  (measurement equations)
#Descanso_juego =~ dormir + ocio
#genera varianzas negativas
Sociabilidad1 =~ P50AR + P50BR + P50CR + P50DR + P50ER + P50FR                                      #P50FR 1 missing
Sociabilidad2 =~ P51AR + P51BR + P51CR + P51DR + P51ER + P51FR + P51GR
Agencia  =~ P56R + P57R + P58R
#P59R con esto sale: "some estimated ov variances are negative"
Ciudadania =~ P64AR + P64BR + P64CR + P64DR + P64ER + P64FR + P64GR + P64HR + P64IR                 #1 missing en cada variable, es el mismo individuo
Seguridad =~ P63A + P63B + P63C + P63F
Salud =~ P72A + P72B + P72C + P72D
##"causal" relationships (ojo: las exógenas deben ser continuas, podría hacer un índice de otras variables)
#Por temas de que el modelo esté identificado, no es necesario que todos tengan las mismas exógenas
#variables comunes para todos
Sociabilidad1 + Sociabilidad2 + Agencia + Ciudadania + Seguridad ~ P42 + s3_p5_porc_m + P44C + P44F + P35 +        # del lado de la oferta
P98 + P26 + AMBITOR                              # del lado de la demanda
#P42 condiciona a que la vivienda tenga energia electrica (no sé si ponerla) / 63 missings
#P40 no corre el modelo si la agrego
#variables individuales para cada capacidad
#Seguridad ~
Salud ~ P42 + s3_p5_porc_m + P44C + P44F + P35 + P46R +
P98 + P26 + AMBITOR
'
fit <- sem(model, data=base_final ,   ordered=c(
"P50AR", "P50BR", "P50CR", "P50DR", "P50ER", "P50FR",
"P51AR", "P51BR", "P51CR", "P51DR", "P51ER", "P51FR", "P51GR",
"P56R", "P57R", "P58R", "P59R",
"P64AR", "P64BR", "P64CR", "P64DR", "P64ER", "P64FR", "P64GR", "P64HR", "P64IR",
"P63A", "P63B", "P63C", "P63F",
"P72A", "P72B", "P72C", "P72D"
)
)
summary(fit, fit.measures = TRUE, standardized = TRUE)
summary(fit, fit.measures = FALSE, standardized = FALSE)
summary(fit, fit.measures = TRUE, standardized = TRUE)
fit <- sem(model, data=base_final ,   ordered=c(
"P50AR", "P50BR", "P50CR", "P50DR", "P50ER", "P50FR",
"P51AR", "P51BR", "P51CR", "P51DR", "P51ER", "P51FR", "P51GR",
"P56R", "P57R", "P58R", "P59R",
"P64AR", "P64BR", "P64CR", "P64DR", "P64ER", "P64FR", "P64GR", "P64HR", "P64IR",
"P63A", "P63B", "P63C", "P63F",
"P72A", "P72B", "P72C", "P72D"
)
)
#lavaan WARNING: exogenous variable(s) declared as ordered in data: P98
#https://groups.google.com/g/lavaan/c/Mddb0uFomME
#https://lavaan.ugent.be/tutorial/cat.html
summary(fit, fit.measures = TRUE, standardized = TRUE)
fitMeasures(fit, c("cfi", "tli", "rmsea"))
fitMeasures(fit, c("cfi.robust", "tli.robust", "rmsea.robust"))
fitMeasures(fit, c("cfi.robust", "tli.robust", "RMSEA.robust"))
?fitMeasures
fitMeasures(fit, "RMSEA.robust")
#en el paper, voy a poner ambos. Los robust son mejor según la literatura
fitMeasures(fit, "cfi.robust")
fitMeasures(fit, "cfi.robust")
parameterEstimates(fit)
?lavInspect
summary(fit, fit.measures = TRUE, standardized = TRUE,rsquare=TRUE)
inspect(fit,'r2')
library(haven)
library(dplyr)
library(lavaan)
library("tibble")
library(tidySEM)
library(ggplot2)
library('lattice')
library("hrbrthemes")
base_final <- read_dta("C:/Cursos_PUCP/2021-1/Tesis 2/Base de datos/BASE_FINAL/Bases de Datos/base_final_recode.dta")
model <- '
##modelo de medida  (measurement equations)
Descanso_juego =~ dormir + ocio
#genera varianzas negativas
Sociabilidad1 =~ P50AR + P50BR + P50CR + P50DR + P50ER + P50FR                                      #P50FR 1 missing
Sociabilidad2 =~ P51AR + P51BR + P51CR + P51DR + P51ER + P51FR + P51GR
Agencia  =~ P56R + P57R + P58R
#P59R con esto sale: "some estimated ov variances are negative"
Ciudadania =~ P64AR + P64BR + P64CR + P64DR + P64ER + P64FR + P64GR + P64HR + P64IR                 #1 missing en cada variable, es el mismo individuo
Seguridad =~ P63A + P63B + P63C + P63F
Salud =~ P72A + P72B + P72C + P72D
##"causal" relationships (ojo: las exógenas deben ser continuas, podría hacer un índice de otras variables)
#Por temas de que el modelo esté identificado, no es necesario que todos tengan las mismas exógenas
#variables comunes para todos
Sociabilidad1 + Sociabilidad2 + Agencia + Ciudadania + Seguridad ~ P42 + s3_p5_porc_m + P44C + P44F + P35 +        # del lado de la oferta
P98 + P26 + AMBITOR                              # del lado de la demanda
#P42 condiciona a que la vivienda tenga energia electrica (no sé si ponerla) / 63 missings
#P40 no corre el modelo si la agrego
#variables individuales para cada capacidad
#Seguridad ~
Salud ~ P42 + s3_p5_porc_m + P44C + P44F + P35 + P46R +
P98 + P26 + AMBITOR
'
fit <- sem(model, data=base_final ,   ordered=c(
"P50AR", "P50BR", "P50CR", "P50DR", "P50ER", "P50FR",
"P51AR", "P51BR", "P51CR", "P51DR", "P51ER", "P51FR", "P51GR",
"P56R", "P57R", "P58R", "P59R",
"P64AR", "P64BR", "P64CR", "P64DR", "P64ER", "P64FR", "P64GR", "P64HR", "P64IR",
"P63A", "P63B", "P63C", "P63F",
"P72A", "P72B", "P72C", "P72D"
)
)
#lavaan WARNING: exogenous variable(s) declared as ordered in data: P98
#https://groups.google.com/g/lavaan/c/Mddb0uFomME
#https://lavaan.ugent.be/tutorial/cat.html
summary(fit, fit.measures = TRUE, standardized = TRUE,rsquare=TRUE)
library(rgdal)
library(broom)
library(rgeos)
library(maptools)
library(ggplot2)
library(viridis)
###############################################################################
#A NIVEL DEPARTAMENTAL
###############################################################################
#Ubicación de los archivos de cartografía
dirmapas <- "C:/Q_lab/R_shiny/Covid_dashboard/Cloropleth Map/DEPARTAMENTO"
setwd(dirmapas)
# El mapa de polígonos en blanco y negro
departamentos<-readOGR(dsn="DEPARTAMENTO_27_04_2015.shp", layer="DEPARTAMENTO_27_04_2015")
summary(departamentos)
departamentos$NOMBDEP
head(departamentos@data)
#plot(departamentos)
#Debemos transformar los datos para poder hacer un gráfico con ggplot
departamentos_fortified <- tidy(departamentos, region =  "NOMBDEP")
unique(departamentos_fortified$id)
# importamos los datos que queremos insertar en el mapa
setwd("C:/Q_lab/R_shiny/Covid_dashboard/Outputs")
dep_stock<- read.csv("covid_departamento_final.csv")
#Nos quedamos solo con las columnas id Y CASOS_DEPARTAMENTO
dep_stock$id <- dep_stock$DEPARTAMENTO
dep_stock <- dep_stock[,c(-1:-3,-5:-9)]
#Hacemos un left join
departamentos_fortified_ <-merge(x = departamentos_fortified, y = dep_stock, by = c("id"), all.x = TRUE)
#Hacemos el gráfico
dep_plot <- ggplot() +
geom_polygon(data = departamentos_fortified_, aes(fill = log(CASOS_DEPARTAMENTO), x = long, y = lat, group = group), size=0, alpha=0.9) +
theme_void() +
scale_fill_viridis(name="log(Casos Covid)") +
labs(
title = "South of France Restaurant concentration",
subtitle = "Number of restaurant per city district",
caption = "Data: INSEE | Creation: Yan Holtz | r-graph-gallery.com"
)  +
theme(
text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
plot.title = element_text(size= 22, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
plot.subtitle = element_text(size= 17, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.43, l = 2, unit = "cm")),
plot.caption = element_text( size=12, color = "#4e4d47", margin = margin(b = 0.3, r=-99, unit = "cm") ),
) +
coord_map()
dep_plot
dirmapas <- "C:/Q_lab/R_shiny/Covid_dashboard/Cloropleth Map/PROVINCIA"
setwd(dirmapas)
# El mapa de polígonos en blanco y negro
provincias<-readOGR(dsn="PROVINCIAS.shp", layer="PROVINCIAS")
summary(provincias)
provincias$NOMBDEP
head(provincias@data)
plot(provincias)
len(unique(provincias$PROVINCIA))
lenght(unique(provincias$PROVINCIA))
length(unique(provincias$PROVINCIA))
length(unique(provincias$DEPARTAMEN))
head(provincias@data)
provincias$id <- paste0(provincias$DEPARTAMEN,provincias$PROVINCIA)
provincias$id <- gsub(" ", "", provincias$id)
length(unique(provincias$id))
head(provincias@data)
subset(provincias, provincias$DEPARTAMEN==LIMA)
subset(provincias, provincias$DEPARTAMEN=="LIMA")
provincias@data
dirmapas <- "C:/Q_lab/R_shiny/Covid_dashboard/Cloropleth Map/DISTRITO"
setwd(dirmapas)
provincias<-readOGR(dsn="DISTRITOS.shp", layer="DISTRITOS")
head(provincias@data)
provincias<-readOGR(dsn="PROVINCIAS.shp", layer="PROVINCIAS")
head(provincias@data)
dirmapas <- "C:/Q_lab/R_shiny/Covid_dashboard/Cloropleth Map/PROVINCIA"
setwd(dirmapas)
# El mapa de polígonos en blanco y negro
provincias<-readOGR(dsn="PROVINCIAS.shp", layer="PROVINCIAS")
summary(provincias)
head(provincias@data)
dirmapas <- "C:/Q_lab/R_shiny/Covid_dashboard/Cloropleth Map/DISTRITO"
setwd(dirmapas)
provincias<-readOGR(dsn="DISTRITOS.shp", layer="DISTRITOS")
head(provincias@data)
dirmapas <- "C:/Q_lab/R_shiny/Covid_dashboard/Cloropleth Map/PROVINCIA2"
setwd(dirmapas)
provincias<-readOGR(dsn="INEI_LIMITE_PROVINCIAL_196_GEOGPSPERU_JUANSUYO_931381206.shp", layer="INEI_LIMITE_PROVINCIAL_196_GEOGPSPERU_JUANSUYO_931381206S")
head(provincias@data)
dirmapas <- "C:/Q_lab/R_shiny/Covid_dashboard/Cloropleth Map/PROVINCIA2"
setwd(dirmapas)
provincias<-readOGR(dsn="INEI_LIMITE_PROVINCIAL_196_GEOGPSPERU_JUANSUYO_931381206.shp")
head(provincias@data)
#Ubicación de los archivos de cartografía
dirmapas <- "C:/Q_lab/R_shiny/Covid_dashboard/Cloropleth Map/PROVINCIA"
setwd(dirmapas)
# El mapa de polígonos en blanco y negro
provincias<-readOGR(dsn="PROVINCIAS.shp", layer="PROVINCIAS")
head(provincias@data)
dirmapas2 <- "C:/Q_lab/R_shiny/Covid_dashboard/Cloropleth Map/PROVINCIA2"
setwd(dirmapas2)
provincias2<-readOGR(dsn="INEI_LIMITE_PROVINCIAL_196_GEOGPSPERU_JUANSUYO_931381206.shp")
head(provincias2@data)
summary(provincias2)
head(provincias2@data)
length(unique(provincias2$IDPROV))
plot(provincias2)
plot(provincias)
plot(provincias2)
dirmapas2 <- "C:/Q_lab/R_shiny/Covid_dashboard/Cloropleth Map/PROVINCIA2"
setwd(dirmapas2)
provincias<-readOGR(dsn="INEI_LIMITE_PROVINCIAL_196_GEOGPSPERU_JUANSUYO_931381206.shp")
head(provincias@data)
summary(provincias)
length(unique(provincias$IDPROV)) #196
provincias_fortified <- tidy(provincias, region =  "IDPROV")
head(provincias_fortified)
unique(provincias_fortified$id)
length(unique(provincias_fortified$id))
prov_stock<- read.csv("covid_provincia_final.csv")
setwd("C:/Q_lab/R_shiny/Covid_dashboard/Outputs")
prov_stock<- read.csv("covid_provincia_final.csv")
head(prov_stock)
prov_stock$IDPROV <- sprintf("%04d", as.numeric(prov_stock$CODIGO))
head(prov_stock$IDPROV,20)
prov_stock$IDPROV
prov_stock$CODIGO
head(prov_stock)
prov_stock <- prov_stock[,c(-1:-6,-8:-12)]
head(prov_stock)
length(unique(prov_stock$IDPROV)) #196
provincias_fortified_ <-merge(x = provincias_fortified, y = prov_stock, by = c("IDPROV"), all.x = TRUE)
head(provincias_fortified)
dirmapas2 <- "C:/Q_lab/R_shiny/Covid_dashboard/Cloropleth Map/PROVINCIA2"
setwd(dirmapas2)
provincias<-readOGR(dsn="INEI_LIMITE_PROVINCIAL_196_GEOGPSPERU_JUANSUYO_931381206.shp")
head(provincias@data)
summary(provincias)
length(unique(provincias$IDPROV)) #196
#plot(provincias)
#Debemos transformar los datos para poder hacer un gráfico con ggplot
provincias_fortified <- tidy(provincias, region =  "IDPROV")
length(unique(provincias_fortified$id)) #196
# importamos los datos que queremos insertar en el mapa
setwd("C:/Q_lab/R_shiny/Covid_dashboard/Outputs")
prov_stock<- read.csv("covid_provincia_final.csv")
prov_stock$id <- sprintf("%04d", as.numeric(prov_stock$CODIGO))
#Nos quedamos solo con las columnas id Y CASOS.POR.PROVINCIA
prov_stock <- prov_stock[,c(-1:-6,-8:-12)]
#Hacemos un left join
provincias_fortified_ <-merge(x = provincias_fortified, y = prov_stock, by = c("id"), all.x = TRUE)
head(provincias_fortified_)
length(unique(provincias$id))
length(unique(provincias_fortified_$id))
prov_plot <- ggplot() +
geom_polygon(data = provincias_fortified_, aes(fill = log(CASOS.POR.PROVINCIA), x = long, y = lat, group = group), size=0, alpha=0.9) +
theme_void() +
scale_fill_viridis(name="log(Casos Covid)") +
labs(
title = "South of France Restaurant concentration",
subtitle = "Number of restaurant per city district",
caption = "Data: INSEE | Creation: Yan Holtz | r-graph-gallery.com"
)  +
theme(
text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
plot.title = element_text(size= 22, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
plot.subtitle = element_text(size= 17, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.43, l = 2, unit = "cm")),
plot.caption = element_text( size=12, color = "#4e4d47", margin = margin(b = 0.3, r=-99, unit = "cm") ),
) +
coord_map()
prov_plot
dirmapas3 <- "C:/Q_lab/R_shiny/Covid_dashboard/Cloropleth Map/DISTRITO"
setwd(dirmapas3)
distritos<-readOGR(dsn="DISTRITOS.shp", layer="DISTRITOS")
head(distritos@data)
tail(distritos@data)
length(unique(distritos$C_DIGO))
plot(distritos)
distritos_fortified <- tidy(distritos, region =  "C_DIGO")
dirmapas3 <- "C:/Q_lab/R_shiny/Covid_dashboard/Cloropleth Map/DISTRITO"
setwd(dirmapas3)
distritos<-readOGR(dsn="DISTRITOS.shp", layer="DISTRITOS")
head(distritos@data)
length(unique(distritos$C_DIGO)) #1874
#plot(distritos)
#Debemos transformar los datos para poder hacer un gráfico con ggplot
distritos_fortified <- tidy(distritos, region =  "C_DIGO")
dirmapas3 <- "C:/Q_lab/R_shiny/Covid_dashboard/Cloropleth Map/DISTRITO2"
setwd(dirmapas3)
distritos<-readOGR(dsn="LIMITE_DISTRITAL_2020_INEI_geogpsperu_juansuyo_931381206.shp")
head(distritos@data)
length(unique(distritos$CODIGO)) #1874
plot(distritos)
distritos_fortified <- tidy(distritos, region =  "CODIGO")
head(distritos_fortified)
length(unique(distritos_fortified$id)) #196
setwd("C:/Q_lab/R_shiny/Covid_dashboard/Outputs")
dist_stock<- read.csv("covid_distrito_final.csv")
head(dist_stock)
dist_stock$id <- sprintf("%06d", as.numeric(dist_stock$CODIGO))
head(dist_stock)
dist_stock <- dist_stock[,c(-1:-7,-9:-13)]
head(dist_stock)
length(unique(dist_stock$id)) #1874
head(distritos_fortified)
distritos_fortified_ <-merge(x = distritos_fortified, y = dist_stock, by = c("id"), all.x = TRUE)
head(distritos_fortified_)
length(unique(distritos_fortified_$id))
dist_plot <- ggplot() +
geom_polygon(data = distritos_fortified_, aes(fill = log(CASOS.POR.DISTRITO), x = long, y = lat, group = group), size=0, alpha=0.9) +
theme_void() +
scale_fill_viridis(name="log(Casos Covid)") +
labs(
title = "South of France Restaurant concentration",
subtitle = "Number of restaurant per city district",
caption = "Data: INSEE | Creation: Yan Holtz | r-graph-gallery.com"
)  +
theme(
text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
plot.title = element_text(size= 22, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
plot.subtitle = element_text(size= 17, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.43, l = 2, unit = "cm")),
plot.caption = element_text( size=12, color = "#4e4d47", margin = margin(b = 0.3, r=-99, unit = "cm") ),
) +
coord_map()
dist_plot
dirmapas <- "C:/Q_lab/R_shiny/Covid_dashboard/Cloropleth Map/DEPARTAMENTO"
setwd(dirmapas)
# El mapa de polígonos en blanco y negro
departamentos<-readOGR(dsn="DEPARTAMENTO_27_04_2015.shp", layer="DEPARTAMENTO_27_04_2015")
summary(departamentos)
departamentos$NOMBDEP
dist_plot <- ggplot() +
geom_polygon(data = distritos_fortified_, aes(fill = CASOS.POR.DISTRITO, x = long, y = lat, group = group), size=0, alpha=0.9) +
theme_void() +
scale_fill_viridis(name="log(Casos Covid)") +
labs(
title = "South of France Restaurant concentration",
subtitle = "Number of restaurant per city district",
caption = "Data: INSEE | Creation: Yan Holtz | r-graph-gallery.com"
)  +
theme(
text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
plot.title = element_text(size= 22, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
plot.subtitle = element_text(size= 17, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.43, l = 2, unit = "cm")),
plot.caption = element_text( size=12, color = "#4e4d47", margin = margin(b = 0.3, r=-99, unit = "cm") ),
) +
coord_map()
dist_plot
dist_plot <- ggplot() +
geom_polygon(data = distritos_fortified_, aes(fill = log(CASOS.POR.DISTRITO), x = long, y = lat, group = group), size=0, alpha=0.9) +
theme_void() +
scale_fill_viridis(name="log(Casos Covid)") +
labs(
title = "South of France Restaurant concentration",
subtitle = "Number of restaurant per city district",
caption = "Data: INSEE | Creation: Yan Holtz | r-graph-gallery.com"
)  +
theme(
text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
plot.title = element_text(size= 22, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
plot.subtitle = element_text(size= 17, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.43, l = 2, unit = "cm")),
plot.caption = element_text( size=12, color = "#4e4d47", margin = margin(b = 0.3, r=-99, unit = "cm") ),
) +
coord_map()
dist_plot
dep_plot <- ggplot() +
geom_polygon(data = departamentos_fortified_, aes(fill = log(CASOS_DEPARTAMENTO), x = long, y = lat, group = group), size=0, alpha=0.9) +
theme_void() +
scale_fill_viridis(name="log(Casos Covid)") +
labs(
title = "Cantidad de casos positivos por COVID-19",
subtitle = "A nivel departamental",
#caption = "Data: INSEE | Creation: Yan Holtz | r-graph-gallery.com"
)  +
theme(
text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
plot.title = element_text(size= 22, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
plot.subtitle = element_text(size= 17, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.43, l = 2, unit = "cm")),
#plot.caption = element_text( size=12, color = "#4e4d47", margin = margin(b = 0.3, r=-99, unit = "cm") ),
) +
coord_map()
dep_plot <- ggplot() +
geom_polygon(data = departamentos_fortified_, aes(fill = log(CASOS_DEPARTAMENTO), x = long, y = lat, group = group), size=0, alpha=0.9) +
theme_void() +
scale_fill_viridis(name="log(Casos Covid)") +
labs(
title = "Cantidad de casos positivos por COVID-19",
subtitle = "A nivel departamental"#,
#caption = "Data: INSEE | Creation: Yan Holtz | r-graph-gallery.com"
)  +
theme(
text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
plot.title = element_text(size= 22, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
plot.subtitle = element_text(size= 17, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.43, l = 2, unit = "cm")),
#plot.caption = element_text( size=12, color = "#4e4d47", margin = margin(b = 0.3, r=-99, unit = "cm") ),
) +
coord_map()
dep_plot
